<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="1.0" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="20" name="Rotorcraft Optitrack (Delft)" security_height="0.3">
  <header>
  	#include "autopilot_guided.h"

		// Useful Combination of the flags fir the autopilot_guided_update
		#define GUIDED_FLAG_XY_VEL_BODY GUIDED_FLAG_XY_BODY|GUIDED_FLAG_XY_VEL
		#define GUIDED_FLAG_XY_VEL_BODY_YAW_OFFSET GUIDED_FLAG_XY_BODY|GUIDED_FLAG_XY_VEL|GUIDED_FLAG_YAW_OFFSET
		#define GUIDED_FLAG_XY_VEL_BODY_YAW_RATE GUIDED_FLAG_XY_BODY|GUIDED_FLAG_XY_VEL|GUIDED_FLAG_YAW_RATE
		#define GUIDED_FLAG_XY_OFFSET_Z_VEL_YAW_OFFSET GUIDED_FLAG_XY_OFFSET|GUIDED_FLAG_Z_VEL|GUIDED_FLAG_YAW_OFFSET
		#define GUIDED_FLAG_XY_OFFSET_YAW_OFFSET GUIDED_FLAG_XY_OFFSET|GUIDED_FLAG_YAW_OFFSET
		#define GUIDED_FLAG_XY_VEL_YAW_RATE GUIDED_FLAG_XY_OFFSET|GUIDED_FLAG_YAW_RATE
    #define GUIDED_FLAG_XY_OFFSET_BODY_YAW_OFFSET GUIDED_FLAG_XY_OFFSET|GUIDED_FLAG_XY_BODY|GUIDED_FLAG_YAW_OFFSET

  </header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="STDBY" x="0.0" y="0.0"/>
    <waypoint name="CLIMB" x="0" y="0"/>
  </waypoints>
  <variables>
	  <variable var="desired_heading" init="0.0f" type="float"/>
	  <variable var="save_heading" init="0.0f" type="float"/>
	  <variable var="save_heading_2" init="0.0f" type="float"/>
	  <variable var="save_distance" init="0.0f" type="float"/>
	  <variable var="diff_heading" init="0.0f" type="float"/>
	  <variable var="counter" init="0" type="uint8_t"/>
	  <variable var="offset_heading" init="0.0f" type="float"/>
	  <variable var="vel_x_NED_heading_offset" init="0.0f" type="float"/>
	  <variable var="vel_y_NED_heading_offset" init="0.0f" type="float"/>
	  <variable var="turn_angle" init="10.0f" type="float" min="-180" max="180" step="1"/>
	  <variable var="turn_rate" init="0.5f" type="float" min="0." max="10." step="0.1"/>
    <variable var="climb_descent_vel" init="0.3f" type="float" min="0." max="1" step="0.1"/>
    <variable var="forward_vel" init="0.2f" type="float" min="0." max="2" step="0.1"/>
	  <variable var="nominal_alt" init="NAV_DEFAULT_ALT" type="float" min="0." max="10." step="0.1"/>
	  <variable var="gain_heading" init="40" type="float" min="0." max="100." step="1"/>
	  <variable var="gain_wall" init="0.1" type="float" min="0." max="1." step="0.01"/>
    <variable var="turned_left" init="FALSE" type="bool"/>
    <variable var="turned_right" init="TRUE" type="bool"/>
    <abi_binding name="OBSTACLE_DETECTION" vars="distance_obstacle_FP, heading_obstacle_FP"/>
    <abi_binding name="RANGE_FORCEFIELD" vars="vel_body_x_FF, vel_body_y_FF, vel_body_z_FF"/>
    <abi_binding name="RANGE_WALLFOLLOWING" vars="heading_leftturn_WF,heading_rightturn_WF,range_sensor_detect_WF"/>
	</variables>

<!--Example Guided flight plan:

1. Flies in a small square, just based on guided flight commands (no waypoints)
2. If it detects an obstacle (example shows only from color detector), it will turn the 90 degrees more quickly

Remember to choose AP_MODE_GUIDED or else it won't work!!!
-->
  <blocks>
    <block name="FPInit">
      <while cond="!GpsFixValid()"/>
      <set var = "distance_obstacle_FP" value="10.0"/><!--Or else it will turn everytime if the abi message is not received-->
      <call_once fun="ins_reset_altitude_ref()"/>
      <set var="desired_heading" value="stateGetNedToBodyEulers_f()->psi"/>
      <while cond="1"/>
    </block>


    <block name="Start Engine">
			<call_once fun="guidance_v_set_guided_th(0.2)"/>
      <call_once fun="autopilot_set_motors_on(TRUE)"/>
      <while cond="1"/>
    </block>

    <block name="Take off">
      <call_once fun="guidance_v_set_guided_th(0.75)"/>
      <while cond="LessThan(stateGetPositionEnu_f()->z,nominal_alt)"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET_YAW_OFFSET,0.,0.,-nominal_alt,DegOfRad(0))"/> 
      <while cond="LessThan(stage_time,1)"/>
     <deroute block="Go Forward"/>   
    </block>


    <block name="Turn to heading">
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_OFFSET,0.,0.,-nominal_alt,0.)"/>
      <while cond="LessThan(stage_time,1)"/>
      <set var="save_heading" value="desired_heading"/>
      <set var="diff_heading" value="desired_heading-stateGetNedToBodyEulers_f()->psi"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0.,0.,-nominal_alt,0.2*diff_heading/fabs(diff_heading))"/>
      <while cond="!CloseDegAngles(DegOfRad(stateGetNedToBodyEulers_f()->psi),DegOfRad(save_heading))"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY,0.,0.,-nominal_alt,save_heading)"/>
      <while cond="LessThan(stage_time,1)"/> 
     <deroute block="Go Forward"/>
    </block>

    <block name="Go_forward_to_heading">
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY,0,0,-nominal_alt,desired_heading)"/>
      <while cond="LessThan(stage_time,1)"/> 
      <while cond="1">
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY,forward_vel + vel_body_x_FF,vel_body_y_FF,-nominal_alt,desired_heading)"/>
      </while>
      <exception cond="1.2>distance_obstacle_FP" deroute="Turn Left"/> 
      <!--exception cond="1.2>distance_obstacle_FP" deroute="Turn Right"/--> 
    </block>


   <block name="Turn Left">
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0,distance_obstacle_FP-1.0,-nominal_alt,0)"/>
      <while cond="LessThan(stage_time,1)"/> 
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0,0.,-nominal_alt,-0.2)"/>
      <exception cond="distance_obstacle_FP>1.2" deroute="Go Forward"/> 
      <while cond="1"/>
    </block>

   <block name="Turn Right">
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0,distance_obstacle_FP-1.0,-nominal_alt,0)"/>
      <while cond="LessThan(stage_time,1)"/> 
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0,0.,-nominal_alt,0.2)"/>
      <exception cond="distance_obstacle_FP>1.2" deroute="Go Forward"/> 
      <while cond="1"/>
    </block>

    <block name="Go Forward">
         <set var="save_heading" value="0"/>
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0,0,-nominal_alt,0)"/>
      <while cond="LessThan(stage_time,1)"/> 
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,forward_vel,0,-nominal_alt,0)"/>

      <while cond="1">
         <set var="diff_heading" value="stateGetNedToBodyEulers_f()->psi-desired_heading"/>
         <call_once fun="FLOAT_ANGLE_NORMALIZE(diff_heading)"/>
         <set var="save_heading" value="diff_heading"/>
      </while>

      <exception cond="1.2>distance_obstacle_FP&&0>save_heading" deroute="Turn Right"/> 
      <exception cond="1.2>distance_obstacle_FP&&save_heading>0" deroute="Turn Left"/> 
    </block>


 


    <block name="Turn Left 2">
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_OFFSET,0.,0.,-nominal_alt,0.)"/>
      <while cond="LessThan(stage_time,1)"/>
      <set var="save_heading" value="stateGetNedToBodyEulers_f()->psi - RadOfDeg(75)"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0.,0.,-nominal_alt,-0.2)"/>
      <while cond="!CloseDegAngles(DegOfRad(stateGetNedToBodyEulers_f()->psi),DegOfRad(save_heading))"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY,0.,0.,-nominal_alt,save_heading)"/>
      <while cond="LessThan(stage_time,1)"/> 
      <set var="turned_left" value="TRUE"/>
      <set var="turned_right" value="FALSE"/>
     <deroute block="FW_change_heading"/>
    </block>

    <block name="Turn Right 2">
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_OFFSET,0.,0.,-nominal_alt,0.)"/>
      <while cond="LessThan(stage_time,1)"/>
      <set var="save_heading" value="stateGetNedToBodyEulers_f()->psi + RadOfDeg(75)"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,0.,0.,-nominal_alt,0.2)"/>
      <while cond="!CloseDegAngles(DegOfRad(stateGetNedToBodyEulers_f()->psi),DegOfRad(save_heading))"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY,0.,0.,-nominal_alt,save_heading)"/>
      <while cond="LessThan(stage_time,1)"/>
      <set var="turned_left" value="FALSE"/>
      <set var="turned_right" value="TRUE"/>
     <deroute block="FW_change_heading"/>
    </block>


    <block name="FW_change_heading">

      <while cond="range_sensor_detect_WF&&turned_left" >
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,forward_vel + 0,0,-nominal_alt,gain_heading*heading_leftturn_WF)"/>
      </while>
      <while cond="range_sensor_detect_WF&&turned_right" >
        <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_VEL_BODY_YAW_RATE,forward_vel + 0,0,-nominal_alt,gain_heading*heading_rightturn_WF)"/>
      </while>
     <deroute block="Turn to heading"/>
    </block>

    <block name="Land">
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET_Z_VEL_YAW_OFFSET,0.,0.,climb_descent_vel,0.)"/>
      <while cond="MoreThan(stateGetPositionEnu_f()->z,0.1)"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET_YAW_OFFSET,0.,0.,0.,0.)"/>  
      <while cond="LessThan(block_time,5)"/>
      <deroute block="Kill Engines"/>
    </block>

    <block name="Kill Engines">
      <call_once fun="autopilot_set_motors_on(FALSE)"/>
      <while cond="1"/>
    </block>
  </blocks>
</flight_plan>
