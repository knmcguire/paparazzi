<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">

<flight_plan alt="1.0" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="20" name="Rotorcraft Optitrack (Delft)" security_height="0.3">
  <header>

#include "autopilot.h"

/********************************************//**
 *  ABI messages for exception triggers or added values for the guided flight plan
 ***********************************************/

// ABI for obstacle detection (In here it comes from the module colorfilter)
#include "subsystems/abi.h"

#ifndef FP_GUIDED_OBSTACLE_DETECTION_ID
#define FP_GUIDED_OBSTACLE_DETECTION_ID ABI_BROADCAST    
PRINT_CONFIG_VAR(FP_GUIDED_OBSTACLE_DETECTION_ID)
#endif

#ifdef NAV_C
abi_event obstacle_detection_ev;
float distance_obstacle_FP = 0.f;
void obstacle_detection_cb(uint8_t UNUSED(sender_id), float distance_obstacle, float UNUSED(heading_obstacle))
{
  distance_obstacle_FP = distance_obstacle;
}
#else
extern abi_event obstacle_detection_ev;
extern float distance_obstacle_FP;
extern void obstacle_detection_cb(uint8_t sender_id, float distance_obstacle, float heading_obstacle);
#endif


</header>


  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="STDBY" x="0.0" y="0.0"/>
    <waypoint name="p1" x="2.0" y="2.5"/>
    <waypoint name="p2" x="2.0" y="-2.5"/>
    <waypoint name="p3" x="-2.0" y="-2.5"/>
    <waypoint name="p4" x="-2.0" y="2.5"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Flight_Area">
      <corner name="p1"/>
      <corner name="p2"/>
      <corner name="p3"/>
      <corner name="p4"/>
    </sector>
  </sectors>
  <variables>
		<variable var="wanted_heading_2" init="0.0f" type="float" min="0." max="10." step="0.1"/>
		<variable var="nominal_alt" init="NOMINAL_ALT" type="float" min="0." max="10." step="0.1"/>
</variables>
  <exceptions>
  </exceptions>

<!--Simple Guided flight plan:

1. Flies in a small square, just based on guided flight commands (no waypoints)
2. If it detects an obstacle (example shows only from color detector), it will turn the 90 degrees more quickly
-->
  <blocks>
    <block name="Geo init">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
      <call_once fun="AbiBindMsgOBSTACLE_DETECTION(FP_GUIDED_OBSTACLE_DETECTION_ID, &obstacle_detection_ev, obstacle_detection_cb)"/>
      <while cond="1"/>
    </block>

    <block name="Start Engine">
      <call_once fun="autopilot_set_motors_on(TRUE)"/>
      <while cond="1"/>
    </block>
    
    <block name="Take off">
      <call_once fun="guidance_v_set_guided_vz(-0.2)"/>
      <while cond="LessThan(stateGetPositionEnu_f()->z,nominal_alt)"/>
      <call_once fun="guidance_v_set_guided_z(-nominal_alt)"/>
      <while cond="LessThan(stage_time,1)"/>
    </block>

    <block name="Go Forward">
      <call_once fun="guidance_h_set_guided_body_vel(0.5,0.0)"/>
      <while cond="LessThan(block_time,5)" />
      <call_once fun="guidance_h_set_guided_body_vel(0.0,0.0)"/>
      <exception cond="2>distance_obstacle_FP" deroute="Turn 90 deg"/> 
    </block>

    <block name="Turn 90 deg">
      <set var="wanted_heading_2" value="stateGetNedToBodyEulers_f()->psi + RadOfDeg(90.0)"/>
      <while cond="LessThan(stage_time,1)"/>
      <call_once fun="guidance_h_set_guided_heading_rate(0.5)"/>
      <while cond="!CloseDegAngles(DegOfRad(stateGetNedToBodyEulers_f()->psi),DegOfRad(wanted_heading_2))"/>
      <call_once fun="guidance_h_set_guided_heading(wanted_heading_2)"/>
      <while cond="LessThan(stage_time,1)"/>
      <deroute block="Go Forward"/>
    </block>

    <block name="Land">
      <call_once fun="guidance_h_set_guided_body_vel(0.0,0.0)"/>
      <call_once fun="guidance_v_set_guided_vz(0.2)"/>
      <while cond="MoreThan(stateGetPositionEnu_f()->z,0.1)"/>
      <call_once fun="guidance_v_set_guided_z(0.0)"/>
      <call_once fun="autopilot_set_motors_on(FALSE)"/>
    </block>

  </blocks>
</flight_plan>
